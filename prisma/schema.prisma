generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  credits       Int       @default(52)
  accounts      Account[]
  sessions      Session[]

  Document Document[]
  Message  Message[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Document {
  id      String    @id @default(cuid())
  name    String
  key     String @unique
  type    String
  user    User      @relation(fields: [userId], references: [id])
  userId  String
  Message Message[]
}

model Message {
  id       String   @id @default(cuid())
  role     String
  content  String
  sources  String[]
  user     User     @relation(fields: [userId], references: [id])
  document Document @relation(fields: [documentId], references: [id])

  userId     String
  documentId String
}

enum role {
  assistant
  user
}
